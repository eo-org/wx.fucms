<?php

namespace DoctrineMongoHydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class ApplicationDocumentMessageHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['appId'])) {
            $value = $data['appId'];
            $return = (string) $value;
            $this->class->reflFields['appId']->setValue($document, $return);
            $hydratedData['appId'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['openId'])) {
            $value = $data['openId'];
            $return = (string) $value;
            $this->class->reflFields['openId']->setValue($document, $return);
            $hydratedData['openId'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['type'])) {
            $value = $data['type'];
            $return = (string) $value;
            $this->class->reflFields['type']->setValue($document, $return);
            $hydratedData['type'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['content'])) {
            $value = $data['content'];
            $return = (string) $value;
            $this->class->reflFields['content']->setValue($document, $return);
            $hydratedData['content'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['picUrl'])) {
            $value = $data['picUrl'];
            $return = (string) $value;
            $this->class->reflFields['picUrl']->setValue($document, $return);
            $hydratedData['picUrl'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['mediaId'])) {
            $value = $data['mediaId'];
            $return = (string) $value;
            $this->class->reflFields['mediaId']->setValue($document, $return);
            $hydratedData['mediaId'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['format'])) {
            $value = $data['format'];
            $return = (string) $value;
            $this->class->reflFields['format']->setValue($document, $return);
            $hydratedData['format'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['thumbMediaId'])) {
            $value = $data['thumbMediaId'];
            $return = (string) $value;
            $this->class->reflFields['thumbMediaId']->setValue($document, $return);
            $hydratedData['thumbMediaId'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['locationX'])) {
            $value = $data['locationX'];
            $return = (string) $value;
            $this->class->reflFields['locationX']->setValue($document, $return);
            $hydratedData['locationX'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['locationY'])) {
            $value = $data['locationY'];
            $return = (string) $value;
            $this->class->reflFields['locationY']->setValue($document, $return);
            $hydratedData['locationY'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['scale'])) {
            $value = $data['scale'];
            $return = (string) $value;
            $this->class->reflFields['scale']->setValue($document, $return);
            $hydratedData['scale'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['label'])) {
            $value = $data['label'];
            $return = (string) $value;
            $this->class->reflFields['label']->setValue($document, $return);
            $hydratedData['label'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['title'])) {
            $value = $data['title'];
            $return = (string) $value;
            $this->class->reflFields['title']->setValue($document, $return);
            $hydratedData['title'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['description'])) {
            $value = $data['description'];
            $return = (string) $value;
            $this->class->reflFields['description']->setValue($document, $return);
            $hydratedData['description'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['url'])) {
            $value = $data['url'];
            $return = (string) $value;
            $this->class->reflFields['url']->setValue($document, $return);
            $hydratedData['url'] = $return;
        }

        /** @Field(type="hash") */
        if (isset($data['data'])) {
            $value = $data['data'];
            $return = $value;
            $this->class->reflFields['data']->setValue($document, $return);
            $hydratedData['data'] = $return;
        }
        return $hydratedData;
    }
}